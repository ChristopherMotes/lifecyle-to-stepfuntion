AWSTemplateFormatVersion: "2010-09-09"
Description: Run at new account creation
Resources:
    stepFunctionRole:
        Type: 'AWS::IAM::Role'
        Properties:
            RoleName: !Sub state-function-${AWS::StackName}
            AssumeRolePolicyDocument:
                Version: 2012-10-17
                Statement:
                    - Effect: Allow
                      Principal:
                        Service:
                        - states.amazonaws.com
                      Action:
                        - 'sts:AssumeRole'
            ManagedPolicyArns:
                - arn:aws:iam::aws:policy/service-role/AWSLambdaRole
                
    cloudWatchEventRole:
        Type: 'AWS::IAM::Role'
        Properties:
            RoleName: !Sub cw-er-${AWS::StackName}
            AssumeRolePolicyDocument:
                Version: 2012-10-17
                Statement:
                    - Effect: Allow
                      Principal:
                        Service:
                        - events.amazonaws.com
                      Action:
                        - 'sts:AssumeRole'
            ManagedPolicyArns:
                - arn:aws:iam::aws:policy/service-role/AWSLambdaRole
                - !Sub arn:aws:iam::${AWS::AccountId}:policy/service-role/AWS_Events_Invoke_Step_Functions_230831293
                
    lambdaFunctionRole:
        Type: 'AWS::IAM::Role'
        Properties:
            RoleName: !Sub lambda-${AWS::StackName}
            AssumeRolePolicyDocument:
                Version: 2012-10-17
                Statement:
                    - Effect: Allow
                      Principal:
                        Service:
                        - lambda.amazonaws.com
                      Action:
                        - 'sts:AssumeRole'
            ManagedPolicyArns:
                - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
                - arn:aws:iam::aws:policy/AutoScalingReadOnlyAccess
                - arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess
            Policies:
                - PolicyName: root
                  PolicyDocument:
                    Version: 2012-10-17
                    Statement:
                      - Effect: Allow
                        Action: autoscaling:CompleteLifecycleAction
                        Resource: '*'
                      
    myStateMachine:
        Type: AWS::StepFunctions::StateMachine
        Properties: 
            DefinitionString: 
                !Sub
                    - |-
                        {
                            "StartAt": "CompleteLifecycleAction",
                            "States": {
                                "CompleteLifecycleAction": {
                                    "Type": "Task",
                                    "Resource": "${completionFunctionArn}",
                                    "End": true
                                }
                            }
                        }
                    - {completionFunctionArn: !GetAtt completionFunction.Arn }
            RoleArn: !GetAtt stepFunctionRole.Arn
            StateMachineName: !Ref AWS::StackName
            StateMachineType: STANDARD
    
    completionFunction:
        Type: AWS::Lambda::Function
        Properties: 
            Handler: index.handler
            Role: !GetAtt lambdaFunctionRole.Arn
            Code: 
                ZipFile: |
                    import json

                    def lambda_handler(event, context):
                        # TODO implement
                        return {
                            'statusCode': 200,
                            'body': json.dumps(event)
                        }
            Runtime: python3.7
            Timeout: 30

    cloudWatchEventRule:    
        Type: AWS::Events::Rule
        Properties: 
            Description: Envokes a state function
            EventPattern: 
                !Sub
                    - |-
                        {
                          "source": [
                            "aws.autoscaling"
                          ],
                          "detail-type": [
                            "EC2 Instance-launch Lifecycle Action"
                          ],
                          "detail": {
                            "AutoScalingGroupName": [
                              "asg-test-enviroment"
                            ]
                          }
                        }
                    - {myAsg:  'null'}
            RoleArn: !GetAtt cloudWatchEventRole.Arn
            State: ENABLED
            Targets: 
              - 
                 Arn: !Ref myStateMachine
                 Id: myStepFunction
                 RoleArn: !GetAtt cloudWatchEventRole.Arn